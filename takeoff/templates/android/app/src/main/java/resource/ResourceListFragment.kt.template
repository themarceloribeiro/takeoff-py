package {{ generator.android_prefix }}.{{ generator.entity_name.lower() }}

import android.os.Bundle
import android.util.Log
import android.view.*
import android.widget.AdapterView
import android.widget.BaseAdapter
import android.widget.ImageButton
import {{ generator.android_prefix }}.R
import {{ generator.android_prefix }}.base.BaseFragment
import {{ generator.android_prefix }}.models.{{ generator.camelize(generator.entity_name) }}
import {{ generator.android_prefix }}.services.{{ generator.camelize(generator.entity_name) }}Service
import kotlinx.android.synthetic.main.{{ generator.entity_name.lower() }}_list_fragment.*
import org.json.JSONArray
import org.json.JSONObject


class {{ generator.camelize(generator.entity_name) }}ListFragment : BaseFragment(), AdapterView.OnItemClickListener {

    var items = ArrayList<{{ generator.camelize(generator.entity_name) }}>()
    var {{ generator.entity_name.lower() }}ListAdapter:{{ generator.camelize(generator.entity_name) }}ListAdapter? = null
    var contextMenu{{ generator.camelize(generator.entity_name) }}:{{ generator.camelize(generator.entity_name) }}? = null

    override fun onCreateView(
        inflater: LayoutInflater,
        container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View? {
        return inflater.inflate(R.layout.{{ generator.entity_name.lower() }}_list_fragment, container, false)
    }

    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
        super.onViewCreated(view, savedInstanceState)
        this.{{ generator.entity_name.lower() }}ListAdapter = {{ generator.camelize(generator.entity_name) }}ListAdapter(context!!, R.id.text, items)

        if ({{ generator.entity_name.lower() }}List != null) {
            {{ generator.entity_name.lower() }}List.adapter = this.{{ generator.entity_name.lower() }}ListAdapter
            {{ generator.entity_name.lower() }}List.onItemClickListener = this
        }

        add{{ generator.camelize(generator.entity_name) }}Button.setOnClickListener { showAdd{{ generator.camelize(generator.entity_name) }}() }
        fetch{{ generator.camelize(generator.entity_name) }}s()
    }

    fun fetch{{ generator.camelize(generator.entity_name) }}s() {
        var s = {{ generator.camelize(generator.entity_name) }}Service
        s.delegate = this
        s.all(JSONObject("{}"))
    }

    override fun allFetched(response: JSONObject) {
        this.items = ArrayList<{{ generator.camelize(generator.entity_name) }}>()
        var results = response.get("results") as JSONArray

        for (i in 0 until results.length()) {
            var result = results.getJSONObject(i)
            var {{ generator.entity_name.lower() }} = {{ generator.camelize(generator.entity_name) }}(result)
            this.items.add({{ generator.entity_name.lower() }})
        }
        this.{{ generator.entity_name.lower() }}ListAdapter = {{ generator.camelize(generator.entity_name) }}ListAdapter(context!!, R.id.text, items)
        this.{{ generator.entity_name.lower() }}ListAdapter!!.fragment = this
        {{ generator.entity_name.lower() }}List.adapter = this.{{ generator.entity_name.lower() }}ListAdapter
        {{ generator.entity_name.lower() }}List.onItemClickListener = this
        ({{ generator.entity_name.lower() }}List.adapter as BaseAdapter).notifyDataSetChanged()
    }

    fun showAdd{{ generator.camelize(generator.entity_name) }}() {
        baseActivity?.showFragment({{ generator.camelize(generator.entity_name) }}FormFragment())
    }

    override fun onItemClick(parent: AdapterView<*>?, view: View?, position: Int, id: Long) {
        Log.i("CLICK", "Clicked Position ${position}")
    }

    fun presentMenuForPosition(button: ImageButton, position: Int) {
        registerForContextMenu(button)
        button.showContextMenu(10.0F, 10.0F)
        contextMenu{{ generator.camelize(generator.entity_name) }} = this.items.get(position)
    }

    override fun onCreateContextMenu( menu: ContextMenu,  v: View,  menuInfo: ContextMenu.ContextMenuInfo?) {
        menu.add("Edit")
        menu.add("Delete")
    }

    override fun onContextItemSelected(item: MenuItem): Boolean {
        if(item.toString() == "Edit") {
            var fragment = {{ generator.camelize(generator.entity_name) }}FormFragment()
            fragment.{{ generator.entity_name.lower() }} = contextMenu{{ generator.camelize(generator.entity_name) }}!!
            this.homeActivity().showFragment(fragment)
        } else if (item.toString() == "Delete") {
            var s = {{ generator.camelize(generator.entity_name) }}Service
            s.delegate = this
            s.delete(contextMenu{{ generator.camelize(generator.entity_name) }}!!)
        }

        return true
    }

    override fun entityDeleted(response: JSONObject) {
        fetch{{ generator.camelize(generator.entity_name) }}s()
    }
}