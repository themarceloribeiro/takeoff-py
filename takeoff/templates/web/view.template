from django.shortcuts import render, redirect
from django.contrib import messages

from ..models.{{ generator.model_name }} import {{ generator.model_class_name() }}
from ..forms.{{ generator.model_name }} import {{ generator.model_class_name() }}Form

def index(request):
    {{ generator.pluralize(generator.model_name) }} = {{ generator.model_class_name() }}.objects.all()
    context = {
        '{{ generator.pluralize(generator.model_name) }}': {{ generator.pluralize(generator.model_name) }}
    }

    return render(request, "{{ generator.pluralize(generator.model_name) }}/index.html", context)

def show(request, {{ generator.model_name }}_id):
    {{ generator.model_name }} = {{ generator.model_class_name() }}.objects.get(id={{ generator.model_name }}_id)
    context = {
        '{{ generator.model_name }}': {{ generator.model_name }}
    }

    return render(request, '{{ generator.pluralize(generator.model_name) }}/show.html', context)

def new(request):
    if request.method != 'POST':
        form = {{ generator.model_class_name() }}Form()
    else:
        form = {{ generator.model_class_name() }}Form(data=request.POST)
        if form.is_valid():
            form.save()
            messages.info(request, '{{ generator.titleize(generator.model_name) }} created.')
            return redirect('main:{{ generator.pluralize(generator.model_name) }}')

    context = {'form': form}
    return render(request, '{{ generator.pluralize(generator.model_name) }}/new.html', context)

def edit(request, {{generator.model_name}}_id):
    {{ generator.model_name }} = {{ generator.model_class_name() }}.objects.get(id={{ generator.model_name }}_id)

    if request.method != 'POST':
        form = {{ generator.model_class_name() }}Form(instance={{ generator.model_name }})
    else:
        form = {{ generator.model_class_name() }}Form(instance={{ generator.model_name }}, data=request.POST)
        if form.is_valid():
            form.save()
            messages.info(request, '{{ generator.titleize(generator.model_name) }} updated.')
            return redirect('main:{{ generator.model_name }}', {{ generator.model_name }}_id={{ generator.model_name }}.id)

    context = {'{{ generator.model_name }}': {{ generator.model_name }}, 'form': form}
    return render(request, '{{ generator.pluralize(generator.model_name) }}/edit.html', context)

def delete(request, {{generator.model_name}}_id):
    {{ generator.model_name }} = {{ generator.model_class_name() }}.objects.get(id={{ generator.model_name }}_id)
    {{ generator.model_name }}.delete()
    messages.info(request, '{{ generator.titleize(generator.model_name) }} deleted.')
    
    return redirect('main:{{ generator.pluralize(generator.model_name) }}')