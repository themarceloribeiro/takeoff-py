package {{ generator.android_prefix }}.{{ generator.entity_name.lower() }}

import android.os.Bundle
import android.util.Log
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.TextView
import {{ generator.android_prefix }}.R
import {{ generator.android_prefix }}.base.BaseFragment
import {{ generator.android_prefix }}.models.{{ generator.camelize(generator.entity_name) }}
import {{ generator.android_prefix }}.services.{{ generator.camelize(generator.entity_name) }}Service
import {{ generator.android_prefix }}.models.toDate
import {{ generator.android_prefix }}.models.toDateString
import kotlinx.android.synthetic.main.{{ generator.entity_name.lower() }}_fragment.*
import org.json.JSONObject

class {{ generator.camelize(generator.entity_name) }}Fragment : BaseFragment() {
    var {{ generator.entity_name.lower() }}: {{ generator.camelize(generator.entity_name) }} = {{ generator.camelize(generator.entity_name) }}()

    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? {
        return inflater.inflate(R.layout.{{ generator.entity_name.lower() }}_form_fragment, container, false)
    }

    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
        super.onViewCreated(view, savedInstanceState)

        {% for attribute in generator.entity_attributes -%}
        {{ attribute['attribute_name'] }}Field.setText({{ generator.entity_name.lower() }}.{{ attribute['attribute_name'] }}{{ attribute['to_string_modifier'] }}, TextView.BufferType.EDITABLE);
        {% endfor %}
    }
}