from rest_framework import serializers, fields
from ..models.{{ generator.model_name }} import {{ generator.camelize(generator.model_name) }}
{%- for attribute in generator.writeable_attributes() %}
{%- if attribute['attribute_type'] == 'models.ForeignKey' %}
from .{{ attribute['attribute_name'] }}_serializer import {{ generator.camelize(attribute['attribute_name']) }}Serializer
{% endif -%}
{%- endfor %}
from django.utils import timezone
import datetime

class {{ generator.camelize(generator.model_name) }}Serializer(serializers.Serializer):
    id = fields.IntegerField(read_only=True)
    {% for attribute in generator.writeable_attributes() %}
    {%- if attribute['is_association'] == True %}
    {{- attribute['attribute_name']}} = {{ attribute['attribute_class'] }}(read_only=True)
    {%- else %}
    {{- attribute['attribute_name']}} = serializers.{{ attribute['attribute_class'] }}(required=False)
    {%- endif %}
    {% endfor -%}
    created_at = serializers.DateTimeField(read_only=True)
    updated_at = serializers.DateTimeField(read_only=True)

    class Meta:
        fields = {{ generator.fields_list() }}

    def create(self, validated_data):
        return {{ generator.camelize(generator.model_name) }}.objects.create(**validated_data)

    def update(self, instance, validated_data):
        {% for attribute in generator.writeable_attributes() -%}
        {%- if attribute['is_association'] != True -%}
        instance.{{- attribute['attribute_name']}} = validated_data.get('{{- attribute['attribute_name']}}', instance.{{- attribute['attribute_name']}})
        {%- endif %}
        {% endfor -%}
        instance.updated_at = timezone.now()
        instance.save()
        return instance
